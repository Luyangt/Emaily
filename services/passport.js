const passport = require('passport');
const GoogleStartegy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const keys = require('../config/keys');

const User = mongoose.model('users');

//可以把这个过程想成是map，serializeUser就是定义key是什么，
//value就是你的user object，通过key你就可以找到对应的object，获得info
//the user parameter refers to the user object that is returned
//by the callback function in the passport.use method. 
passport.serializeUser((user, done)=> {
  //user.id is the id generated by mongoDB, not the googleId
  //because we might have other strategies(like facebook, linkedin, etc)
  done(null, user.id); 
});

//deserializeUser就是根据key找到对应的user object
passport.deserializeUser((id, done) => {
  User.findById(id).then(user => {
    done(null, user);
  })
});

//passport I want you to aware there's a new strategy available
passport.use(
    //First Argument: GoogleStrategy Configuration
    new GoogleStartegy(
    {
    clientID: keys.googleClientID,
    clientSecret:keys.googleClientSecret,
    callbackURL: '/auth/google/callback' 
    }, 
    //Second Argument: Callback Function
    (accessToken, refreshToken, profile, done) => {
      User.findOne({ gooleId: profile.id}).then (existingUser => {
        if (existingUser) {
          // we already have a record wiht the given profile ID
          done(null, existingUser); //null means no error
        } else {
          // we don't have a user record with this ID, make a new record
          //create a new instance of a user
          new User({ googleId: profile.id}).save().then (user => done(null, user)); 
        }
       })
      
    }
  )
);